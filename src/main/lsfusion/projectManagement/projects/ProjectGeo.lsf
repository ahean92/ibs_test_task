MODULE ProjectGeo;

REQUIRE Project, PartnerGeo;

NAMESPACE ProjectManagement;

address 'Address' = DATA ISTRING[150] (Project) CHARWIDTH 30;
city 'City' = DATA ISTRING[50] (Project) CHARWIDTH 12;
state 'State' = DATA ISTRING[50] (Project) CHARWIDTH 12;
zip 'Postcode' = DATA ISTRING[10] (Project);

addressCsv 'Address' (Project p) = CONCAT ', ', address(p), city(p), state(p) IF NOT state(p) = city(p), zip(p) CHARWIDTH 20;
addressLines 'Address' (Project p) = CONCAT '\n ', address(p), city(p), state(p) IF NOT state(p) = city(p), zip(p);

@defineObjectMap(project, p, details){
    latitude 'Latitude'= DATA NUMERIC[11,6] (Project);
    longitude 'Longitude' = DATA NUMERIC[11,6] (Project);
        
    inputGoogleAddress (Project p) {
        INPUT a = STRING[150] CUSTOM 'googleAutocomplete' DO {
            address(p) <- getWord(a, ',', 1);
            city(p) <- getWord(a, ',', 2);
            state(p) <- getWord(a, ',', 3);

            getCoordinates(a);

            latitude(p) <- readLatitude();
            longitude(p) <- readLongitude();
        }
    }

    EXTEND FORM project
        PROPERTIES addressCsv(p) ON CHANGE inputGoogleAddress(p) SHOWIF apiKey(MapProvider.google)
        PROPERTIES(p) latitude, longitude

        OBJECTS pg = Project MAP
        PROPERTIES(pg) name READONLY, latitude, longitude
        PROPERTIES fitBounds = TRUE IF pg IS Project
        FILTERS pg = p
    ;

    DESIGN project {
        details {
            NEW geo {
                caption = 'Coordinates';
                MOVE PROPERTY(addressCsv(p)) { alignment = STRETCH; }
                NEW coordinates {
                    horizontal = TRUE;
                    MOVE PROPERTY(latitude(p));
                    MOVE PROPERTY(longitude(p));
                }
                MOVE BOX(pg) {
                    height = 300;
                    caption = '';
                }
            }
        }
    }
};

EXTEND FORM project
    PROPERTIES(p) address, city, state, zip
;

DESIGN project {
    geo {
        NEW address FIRST {
            horizontal = TRUE;
            MOVE PROPERTY(address(p));
            MOVE PROPERTY(city(p));
            MOVE PROPERTY(state(p));
            MOVE PROPERTY(zip(p));
        }
    }
}

EXTEND FORM projects
    PROPERTIES(p) READONLYIF isReadonly() latitude, longitude
;
