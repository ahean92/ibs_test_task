MODULE Task;

REQUIRE ProjectManagementSettings, Employee,
        Doc, FileUtils, Comments,
        TaskType, TaskStatus, TaskPriority, TaskTag;

PRIORITY MasterData;

NAMESPACE ProjectManagement;

CLASS Task '{Task}';

readonly = ABSTRACT CASE BOOLEAN (Task);

@defineID(task, '{Tasks}', '', 6);

name '{Name}' = DATA ISTRING (Task) CHARWIDTH 30 IN id;

idName '{Name}' (Task t) = CONCAT ' ', '#' + id(t), name(t);

prefixName = ABSTRACT VALUE ISTRING (Task);
property = ABSTRACT VALUE ISTRING (Task, STRING);

author 'Author' = DATA Employee (Task);
nameAuthor 'Author' (Task t) = name(author(t));
WHEN LOCAL SET(Task t IS Task) AND NOT author(t) AND currentUser() IS Employee DO author(t) <- currentUser();
property (Task t, STRING p) += nameAuthor(t) IF p = 'Author';

assignedTo 'Assigned to' = DATA Employee (Task);
nameAssignedTo 'Assigned to' (Task t) = name(assignedTo(t));
property (Task t, STRING p) += nameAssignedTo(t) IF p = 'Assigned to';

deadline 'Deadline' = DATA DATE (Task);
property (Task t, STRING p) += ISTRING(deadline(t)) IF p = 'Deadline';

description 'Description' = DATA RICHTEXT (Task) CHARWIDTH 20;

status 'Status' = DATA TaskStatus (Task);
nameStatus 'Status' (Task t) = name(status(t)) IN id;

closed 'Closed' (Task t) = closed(status(t));
opened 'Opened' (Task t) = t IS Task AND NOT closed(t);

type 'Type' = DATA TaskType (Task);
nameType 'Type' (Task t) = name(type(t)) IN id;

WHEN LOCAL SET(Task t IS Task) AND NOT CHANGED(type(t)) DO type(t) <- defaultTaskType();

priority 'Priority' = DATA TaskPriority (Task);
namePriority 'Priority' (Task t) = name(priority(t));
idColorPriority (Task t) = idColor(priority(t));
rgbColorPriority (Task t) = rgbColor(priority(t));
property (Task t, STRING p) += namePriority(t) IF p = 'Priority';

in 'Incl.' = DATA BOOLEAN (Task, TaskTag);
tags 'Tags' (Task t) = GROUP CONCAT name(TaskTag tg) IF in(t, tg), ', ' ORDER name(tg), tg;
property (Task t, STRING p) += tags(t) IF p = 'Tags';

onCreate ABSTRACT LIST (Task);

FORM task '{Task}'
    OBJECTS t = Task PANEL
    PROPERTIES(t) id, name, nameStatus SELECT 'buttonGroup',
                  nameAuthor, nameAssignedTo,
                  nameType, namePriority, tags,
                  deadline, description

    EDIT Task OBJECT t
;

DESIGN task {
    OBJECTS {
        NEW pane {
            horizontal = TRUE;
            fill = 1;
            NEW leftPane {
                fill = 1;
                NEW header {
                    alignment = STRETCH;
                    NEW main {
                        horizontal = TRUE;
                        alignment = STRETCH;
                        MOVE PROPERTY(id(t)) { flex = 0; };
                        MOVE PROPERTY(name(t)) { flex = 1; fontSize = 16; }
                    }
                    NEW params {
                        lines = 2;
                        alignment = STRETCH;
                        MOVE PROPERTY(nameAuthor(t));
                        MOVE PROPERTY(nameAssignedTo(t));
                        MOVE PROPERTY(nameType(t));
                        MOVE PROPERTY(namePriority(t));
                        MOVE PROPERTY(tags(t));
                        MOVE PROPERTY(deadline(t));
                    }
                }
                NEW details {
                    tabbed = TRUE;
                    fill = 1;
                    NEW description {
                        caption = 'Description';
                        MOVE PROPERTY(description(t)) { caption = ''; fill = 1; }
                    }
                }
            }
            NEW rightPane {
                fill = 1;
            }
        }
    }
}

@defineFormStatusContainer(task);
DESIGN task {
    status {
        MOVE PROPERTY(nameStatus(t));
    }
}

showTask (LONG id) {
    FOR LONG(Task t AS Task) = id DO
        SHOW task OBJECTS t = t DOCKED;
} @@api;

FORM tasks '{Tasks}'
    OBJECTS t = Task BACKGROUND rgbColorPriority(t)
    PROPERTIES(t) READONLY id, name, nameAuthor, nameAssignedTo, 
                           nameStatus, nameType, namePriority, 
                           tags, deadline, closed
    PROPERTIES(t) NEWSESSION NEW, EDIT, DELETE

    FILTERGROUP active
        FILTER 'Opened' opened(t) 'F8' DEFAULT
        FILTER 'Closed' closed(t) 'F7'

    FILTERGROUP my
        FILTER 'My tasks' author(t) = currentUser() 'F6'
        FILTER 'Assigned to me' assignedTo(t) = currentUser() 'F5'

    LIST Task OBJECT t
;

@defineObjectHistory(task);
@defineHistoryProperty(task, name, '{Name}');
@defineHistoryProperty(task, status, 'Status', nameStatus);
@defineHistoryProperty(task, assignedTo, 'Assigned to', nameAssignedTo);
@defineHistoryProperty(task, deadline, 'Deadline');
@defineHistoryProperty(task, priority, 'Priority', namePriority);
@defineHistoryProperty(task, type, 'Type', nameType);
@defineDocHistoryForm(task, task, t);

@defineDocObjectsForm(tasks, t, '{Tasks}');

@defineObjectFiles(task, t, 'Task file');

@defineObjectComments(task, t, rightPane);
@defineObjectCommentsHistory(task);

WHEN [GROUP SUM 1 IF SET(TaskHistory th IS TaskHistory) BY task(th)](Task t) AND NOT [GROUP SUM 1 IF SET(TaskComment tc IS TaskComment) BY task(tc)](t) DO
    NEW tc = TaskComment {
        task(tc) <- t;
    }

DESIGN tasks {
    PROPERTY(tags(t)) { valueHeight = 18; }
}

NAVIGATOR {
    operations {
        NEW tasks;
    }
}